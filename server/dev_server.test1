#!/bin/sh -efu

. ../modules/test_lib.sh

assert_cmd "./dev_server -x"\
  "Error: unknown option: -x" 1

assert_cmd "./dev_server x"\
  "Error: unexpected argument: x" 1

assert_cmd "./dev_server"\
  "Error: can't open pid-file: /var/run/dev_server.pid" 1

assert_cmd "./dev_server -p a"\
  "Error: can't parse value: \"a\"" 1

#####################
# try to stop the server
./dev_server --stop --pidfile pid.tmp &>/dev/null ||:

#####################
# run server in normal mode (background)
./dev_server --pidfile pid.tmp --config test_data/n1.txt &

pid=$!
# wait until server write its pid-file and check it
sleep 0.2
if [ "$pid" != "$(cat pid.tmp)" ]; then
  kill $pid
  printf "wrong pid: $pid vs. $(cat pid.tmp)"
  exit 1
fi
kill $pid
sleep 0.1

if [ -f pid.tmp ]; then
  printf "pid file have not been removed"
  exit 1
fi

#####################
# same in daemon mode
assert_cmd "./dev_server --pidfile pid.tmp --config test_data/n1.txt --logfile log.txt --daemon"\
    "" 0
# pid file should exist when dev_server exits. No waiting is needed
assert_cmd "./dev_server --stop --pidfile pid.tmp" "" 0

sleep 0.1
if [ -f pid.tmp ]; then
  printf "pid file have not been removed"
  exit 1
fi

assert_cmd "./dev_server --stop --pidfile pid.tmp"\
   "Error: can't open pid-file: pid.tmp" 1


